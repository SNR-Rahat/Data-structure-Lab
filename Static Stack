#include<stdio.h>
#define CAPACITY 8
char stack[CAPACITY];
int top = -1;
int i;
void push(char x)
{
    if(top < CAPACITY - 1)
    {
        top = top + 1;
        stack[top]= x;
        printf("Succesfully added item: %c\n", x);
    }
    else
    {
        printf("Exception! No spaces\n");
    }
}

char pop()
{
    if(top >= 0)
    {
        char val = stack[top];
        top = top - 1;
        return val;
    }
    printf("Exception from Pop! Empty Stack\n");
    return -1;
}

char peek()
{
    if(top >= 0)
    {
        return stack[top];
    }
    printf("Exception from Peek! Empty Stack\n");
    return -1;
}
int main()
{
    printf("Implementing my stack in C.\n");
    push('s');
    push('t');
    push('a');
    push('b');
    push('b');
    push('i');
    push('g');
    printf("Pop item: %c\n", pop());
    printf("Pop item: %c\n", pop());
    printf("Pop item: %c\n", pop());
    peek();
    printf("Top of Stack: %c\n",peek());
    // print stack data
    for(i=top; i>=0; i--)
    {
        printf("%c\n",stack[i]);
    }
    /* peek();
     push(10);
     push(20);
     push(30);
     printf("Pop item: %d\n", pop());
     push(40);
     printf("Top of Stack: %d\n",peek());*/
    return 0;
}
